{"version":3,"sources":["components/Analise/Analise.module.css","components/RightPanel/RightPanel.js","components/AppHeader/AppHeader.js","constants/cartas.js","components/Carta/Carta.js","components/Analise/Analise.js","App.js","serviceWorker.js","index.js","components/RightPanel/RightPanel.module.css"],"names":["module","exports","RightPanel","modal","notification","useState","showModal","pass","msg","state","setState","className","Modal","open","aria-label","iconDescription","primaryButtonText","secondaryButtonText","modalHeading","style","textAlign","onRequestClose","onRequestSubmit","a","async","fetch","method","headers","body","JSON","stringify","rawResponse","json","content","err","TextInput","id","type","labelText","placeholder","onChange","e","target","value","kind","title","subtitle","onCloseButtonClick","caption","Date","classes","container","role","Button","onClick","AppHeader","props","errMsg","credentials","apikey","url","model_id","setLoading","cancel","marginBottom","href","prefix","window","expanded","cartas","Carta","error","letterText","split","map","line","justifyContent","marginRight","carta","Math","floor","random","length","console","setData","result","TextArea","cols","rows","textChangeHandler","Analise","data","log","entities","entity","index","text","confidence","margin","marginTop","relations","relation","arguments","argument","score","App","loading","points","io","on","obj","setLoadingHandler","cancelLoadingHandler","loadingComponent","data-loading","viewBox","cx","cy","r","d","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9b22731f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"placeholder\":\"Analise_placeholder__n8lhc\",\"data\":\"Analise_data__3ue7t\",\"subtitle\":\"Analise_subtitle__2IAHV\"};","import React, { useState } from 'react';\nimport classes from './RightPanel.module.css';\nimport { Button, Modal, TextInput, ToastNotification } from 'carbon-components-react';\n\nconst RightPanel = () => {\n\n    const initialState = {\n        showModal: false,\n        pass: \"\",\n        notification: false,\n        msg: \"\"\n    }\n\n    const [state, setState] = useState(initialState);\n\n    const onModalOpenHandler = () => {\n        setState({ ...state, showModal: true });\n    };\n\n    const onSubmitHandler = async () => {\n        const rawResponse = await fetch('/enviar', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json', 'Accept': 'application/json' },\n            body: JSON.stringify({\n                pass: state.pass\n            })\n        });\n        const content = await rawResponse.json();\n        if (content.err === false) {\n            setState({ ...state, showModal: false, notification: \"success\", msg: content.msg, pass: \"\" });\n        } else {\n            setState({ ...state, showModal: false, notification: \"error\", msg: content.msg, pass: \"\" });\n        };\n    };\n\n    let modal;\n    if (state.showModal === true) {\n        modal = (\n            <div className=\"modal-settings\">\n                <Modal\n                    open\n                    aria-label=\"Enviar desafio para análise\"\n                    iconDescription=\"Fechar\"\n                    primaryButtonText=\"Enviar\"\n                    secondaryButtonText=\"Cancelar\"\n                    modalHeading=\"Enviar desafio para análise\"\n                    style={{ textAlign: \"left\" }}\n                    onRequestClose={() => setState({ ...state, showModal: false })}\n                    onRequestSubmit={onSubmitHandler}\n                >\n                    <TextInput\n                        // style={{ marginBottom: \"16px\" }}\n                        id=\"senha\"\n                        type=\"password\"\n                        labelText=\"Senha para o desafio recebida por email\"\n                        placeholder=\"Digite sua senha...\"\n                        onChange={(e) => setState({ ...state, pass: e.target.value })}\n                        value={state.pass}\n                    />\n                </Modal>\n            </div>\n        );\n    } else {\n        modal = null;\n    };\n\n    let notification;\n    if (notification !== false) {\n        switch (state.notification) {\n            case \"error\":\n                notification = (\n                    <div className=\"modal-settings\">\n                        <ToastNotification\n                            kind=\"error\"\n                            title=\"Erro\"\n                            subtitle={state.msg}\n                            iconDescription=\"Fechar\"\n                            onCloseButtonClick={() => setState({ ...state, notification: false, msg: \"\" })}\n                            caption={Date()}\n                        />\n                    </div>\n                );\n                break;\n            case \"success\":\n                notification = (\n                    <div className=\"modal-settings\">\n                        <ToastNotification\n                            kind=\"success\"\n                            title=\"Sucesso\"\n                            subtitle={state.msg}\n                            iconDescription=\"Fechar\"\n                            onCloseButtonClick={() => setState({ ...state, notification: false, msg: \"\" })}\n                            caption={Date()}\n                        />\n                    </div>\n                );\n                break;\n            default:\n                notification = null;\n                break;\n        }\n    } else {\n        notification = null;\n    }\n\n    return (\n        <div className={classes.container}>\n            {modal}\n            {notification}\n            <h3>Desafio Natalino <span role=\"img\" aria-label=\"natal\">🎄</span></h3>\n            <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;O Papai Noel está recebendo muitas cartas esse ano. Facilite o trabalho do Papai Noel criando um anotador de cartas de natal, para ele saber rapidamente qual presente entregar, para quem e onde!</p>\n            <Button\n                onClick={onModalOpenHandler}\n            >Enviar</Button>\n        </div>\n    );\n};\n\nexport default RightPanel;","import React, { useState } from 'react';\nimport {\n    Header,\n    HeaderName,\n    HeaderGlobalBar,\n    HeaderGlobalAction,\n    HeaderPanel\n} from 'carbon-components-react/lib/components/UIShell';\nimport { Modal, TextInput, ToastNotification } from 'carbon-components-react';\nimport GithubIcon32 from '@carbon/icons-react/lib/logo--github/32';\nimport SettingsIcon32 from '@carbon/icons-react/lib/settings/32';\nimport RightPanel from '../RightPanel/RightPanel';\n\nconst AppHeader = (props) => {\n\n    const initialState = {\n        showModal: false,\n        notification: false,\n        errMsg: \"\",\n        credentials: {\n            apikey: \"\",\n            url: \"\",\n            model_id: \"\"\n        }\n    };\n\n    const [state, setState] = useState(initialState);\n\n    const onChangeCredentialsHandler = async () => {\n        props.setLoading();\n        setState({ ...state, credentials: { ...state.credentials }, showModal: false });\n        const rawResponse = await fetch('/credenciais', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json', 'Accept': 'application/json' },\n            body: JSON.stringify({\n                ...state.credentials\n            })\n        });\n        const content = await rawResponse.json();\n        props.cancel();\n        if (content.err === true) {\n            setState({ showModal: false, notification: \"error\", errMsg: content.msg });\n        } else {\n            setState({ showModal: false, notification: \"success\" });\n        };\n    };\n\n    let modal;\n    if (state.showModal === true) {\n        modal = (\n            <div className=\"modal-settings\">\n                <Modal\n                    open\n                    aria-label=\"Trocar modelo de anotação\"\n                    iconDescription=\"Fechar\"\n                    primaryButtonText=\"Trocar modelo\"\n                    secondaryButtonText=\"Cancelar\"\n                    modalHeading=\"Troque o seu modelo de anotação\"\n                    style={{ textAlign: \"left\" }}\n                    onRequestClose={() => setState({ showModal: false })}\n                    onRequestSubmit={onChangeCredentialsHandler}\n                >\n                    <TextInput\n                        style={{ marginBottom: \"16px\" }}\n                        id=\"apikey-nlu\"\n                        labelText=\"Apikey do serviço de Natural Language Understanding\"\n                        placeholder=\"Digite a apikey...\"\n                        onChange={(e) => setState({ ...state, credentials: { ...state.credentials, apikey: e.target.value } })}\n                        value={state.credentials.apikey}\n                    />\n                    <TextInput\n                        style={{ marginBottom: \"16px\" }}\n                        id=\"url-nlu\"\n                        labelText=\"URL do serviço de Natural Language Understanding\"\n                        placeholder=\"Digite a url...\"\n                        onChange={(e) => setState({ ...state, credentials: { ...state.credentials, url: e.target.value } })}\n                        value={state.credentials.url}\n                    />\n                    <TextInput\n                        id=\"model-wks\"\n                        labelText=\"Model ID do serviço de Watson Knowledge Studio\"\n                        placeholder=\"Digite o model ID...\"\n                        onChange={(e) => setState({ ...state, credentials: { ...state.credentials, model_id: e.target.value } })}\n                        value={state.credentials.model_id}\n                    />\n                </Modal>\n            </div>\n        );\n    } else {\n        modal = null;\n    };\n\n    let notification;\n    if (notification !== false) {\n        switch (state.notification) {\n            case \"error\":\n                notification = (\n                    <div className=\"modal-settings\">\n                        <ToastNotification\n                            kind=\"error\"\n                            title=\"Erro\"\n                            subtitle={state.errMsg}\n                            iconDescription=\"Fechar\"\n                            onCloseButtonClick={() => setState({ ...state, notification: false, errMsg: \"\" })}\n                            caption={Date()}\n                        />\n                    </div>\n                );\n                break;\n            case \"success\":\n                notification = (\n                    <div className=\"modal-settings\">\n                        <ToastNotification\n                            kind=\"success\"\n                            title=\"Sucesso\"\n                            subtitle=\"Modelo alterado com sucesso.\"\n                            iconDescription=\"Fechar\"\n                            onCloseButtonClick={() => setState({ ...state, notification: false })}\n                            caption={Date()}\n                        />\n                    </div>\n                );\n                break;\n            default:\n                notification = null;\n                break;\n        }\n    } else {\n        notification = null;\n    }\n\n    return (\n        <Header aria-label=\"IBM Digital Chistmas Challenge\">\n            {modal}\n            {notification}\n            <HeaderName href=\"/\" prefix=\"IBM\">\n                Digital Christmas Challenge\n            </HeaderName>\n            <HeaderGlobalBar>\n                <HeaderGlobalAction aria-label=\"Github\" onClick={() => window.open(\"https://github.com/404\")}>\n                    <GithubIcon32 />\n                </HeaderGlobalAction>\n                <HeaderGlobalAction aria-label=\"Settings\" onClick={() => setState({ ...state, showModal: true, credentials: { ...state.credentials } })}>\n                    <SettingsIcon32 />\n                </HeaderGlobalAction>\n            </HeaderGlobalBar>\n            <HeaderPanel aria-label=\"description\" expanded>\n                <RightPanel />\n            </HeaderPanel>\n        </Header>\n    );\n};\n\nexport default AppHeader;","const cartas = ['Papai noel eu sou a Eva moro na Avenida Vinte e Nove de Setembro, 3648 eu quero te pedir por favor um carrinho ', 'Querido papai noel eu quero te pedir por favor uma Ferrari moro na Rua Ipiranga, 305 ', 'Papai noel eu sou a Luiza eu moro na Estrada da Felicidade, número 767 eu iria ficar muito feliz se ganhasse um carrinho ', 'Papai noel eu sou a Thais esse natal eu gostaria de ganhar uma Ferrari se eu ganhar vou ficar muito muito feliz eu moro na Rua Jose Dias, número 1851 ', 'Papai noel eu sou o Eric meu endereço é Rua Branco Matos, n1060 eu quero te pedir por favor um boneco max steel ', 'Papai noel eu sou a juju esse ano tirei notas muito boas no colegio, acho que eu merecia ganhar uma bicicleta moro na avenida brasil, 2268 ', 'Querido papai noel meu endereço é Rua Branco Matos, n25 eu gostaria de ganhar um carrinho ', 'Papai noel eu sou o Lucas ajudei muito papai e mamãe sempre que eles pediram esse ano, queria pedir para o senhor me trazer um carrinho no natal seria muito legal moro na Rua Branco Matos, 3054 ', 'Oi papai noel eu moro na Rua Diogenes Lima, número 3845 esse natal eu gostaria de ganhar uma bicicleta se eu ganhar vou ficar muito muito feliz ', 'Querido papai noel, eu iria ficar muito feliz se ganhasse um patinete eu moro na Rua Jose Dias, número 1726 ', 'Querido papai noel esse ano tirei notas muito boas no colegio, acho que eu merecia ganhar um carrinho meu endereço é Estrada da Felicidade, n3083 ', 'Oi Papai Noel, eu sou o Pedro, meu endereço é rua diogenes lima, n673 fui muito legal com meus amiguinhos esse ano, sera que vc poderia me dar um tenis ', 'Papai noel, esse natal eu gostaria de ganhar um hotweels se eu ganhar vou ficar muito muito feliz meu endereço é rua branco matos, n156 ', 'Querido papai noel eu moro na Avenida Vinte e Nove de Setembro, número 2594 fui muito legal com meus amiguinhos esse ano, sera que vc poderia me dar um hotweels ', 'Querido Papai Noel, meu endereço é Estrada da Felicidade, n2094 gostaria de pedir para o senhor uma boneca polly ', 'Papai noel, moro na Rua da Alvorada, 2637 como me comportei muito bem esse ano queria ganhar um ponei ', 'Oi papai noel eu gostaria de ganhar um boneco max steel eu moro na Rua Ipiranga, número 484 ', 'Querido papai noel, ajudei muito papai e mamãe sempre que eles pediram esse ano, queria pedir para o senhor me trazer um celular no natal seria muito legal moro na Rua da Alvorada, 3024 ', 'Oi papai noel eu moro na Avenida Vinte e Nove de Setembro, número 2548 eu gostaria de ganhar um computador ', 'ola papai noel meu endereço é Estrada da Felicidade, n431 eu gostaria de ganhar um tenis ', 'ola papai noel eu moro na Rua Branco Matos, número 1316 como me comportei muito bem esse ano queria ganhar um computador ', 'Querido Papai Noel, eu moro na rua jose dias, número 2905 eu gostaria de ganhar uma bicicleta ', 'Oi Papai Noel, eu sou a Renata, fui muito legal com meus amiguinhos esse ano, sera que vc poderia me dar uma bicicleta meu endereço é Rua Ipiranga, n2879 ', 'Papai noel eu sou a Thais meu endereço é Rua Jose Dias, n96 eu quero te pedir por favor uma bicicleta ', 'eu iria ficar muito feliz se ganhasse uma boneca polly eu moro na Rua Branco Matos, número 606 ', 'Oi Papai Noel, eu sou o Julio, como me comportei muito bem esse ano queria ganhar um patinete eu moro na Estrada da Felicidade, número 1 ', 'Oi papai noel fui muito legal com meus amiguinhos esse ano, sera que vc poderia me dar uma boneca polly moro na Avenida Brasil, 1508 ', 'esse natal eu gostaria de ganhar um boneco max steel se eu ganhar vou ficar muito muito feliz eu moro na Rua Diogenes Lima, número 3478 ', 'Oi papai noel gostaria de pedir para o senhor uma boneca polly eu moro na Avenida Vinte e Nove de Setembro, número 1127 ', 'Oi papai noel meu endereço é Rua Jose Dias, n2904 eu quero te pedir por favor um computador ', 'meu endereço é Estrada da Felicidade, n1013 ajudei muito papai e mamãe sempre que eles pediram esse ano, queria pedir para o senhor me trazer um celular no natal seria muito legal ', 'Papai noel eu sou o dani eu moro na Rua Jose Dias, número 908 eu gostaria de ganhar uma boneca polly ', 'Querido papai noel, meu endereço é Avenida Brasil, n1699 ajudei muito papai e mamãe sempre que eles pediram esse ano, queria pedir para o senhor me trazer uma boneca barbie no natal seria muito legal ', 'Papai noel, esse ano tirei notas muito boas no colegio, acho que eu merecia ganhar uma bicicleta ou bola moro na Rua Diogenes Lima, 1244 ', 'ola papai noel esse ano tirei notas muito boas no colegio, acho que eu merecia ganhar uma bola eu moro na Rua Ipiranga, número 363 ', 'Oi Papai Noel, eu sou o Eduardo, eu quero te pedir por favor um computador moro na Rua Lopes Machado, 2963 ', 'Oi Papai Noel, eu sou o Marcos, eu gostaria de ganhar um boneco max steel eu moro na Avenida Vinte e Nove de Setembro, número 2884 ', 'Querido Papai Noel, esse natal eu gostaria de ganhar uma bicicleta se eu ganhar vou ficar muito muito feliz eu moro na Avenida Brasil, número 1228 ', 'Oi Papai Noel, eu sou a Cristiane, moro na estrada da felicidade, 476 ajudei muito papai e mamãe sempre que eles pediram esse ano, queria pedir para o senhor me trazer um ponei no natal seria muito legal ', 'Querido papai noel, eu quero te pedir por favor um carrinho meu endereço é avenida brasil, n1533 ', 'Papai noel eu sou o Bruno moro na Avenida Brasil, 3488 fui muito legal com meus amiguinhos esse ano, sera que vc poderia me dar um ponei ', 'Papai noel eu sou o Pedro moro na Avenida Vinte e Nove de Setembro, 1952 eu quero te pedir por favor um tenis ', 'ola papai noel eu iria ficar muito feliz se ganhasse uma bola moro na Rua Lopes Machado, 1895 ', 'Oi Papai Noel, eu sou o Juan, eu moro na rua diogenes lima, número 457 eu gostaria de ganhar um boneco max steel ', 'Querido papai noel eu gostaria de ganhar um hotweels eu moro na Avenida Brasil, número 521 ', 'Oi papai noel meu endereço é Rua Lopes Machado, n2406 eu gostaria de ganhar um celular ', 'Oi Papai Noel, eu sou a vivi, eu moro na Rua Branco Matos, número 838 esse natal eu gostaria de ganhar um carrinho se eu ganhar vou ficar muito muito feliz ', 'Querido papai noel meu endereço é rua diogenes lima, n2122 eu gostaria de ganhar um tenis ', 'Papai noel, gostaria de pedir para o senhor um hotweels meu endereço é Rua da Alvorada, n3938 ', 'Oi Papai Noel, eu sou o Lucas, meu endereço é Rua Lopes Machado, n2397 esse ano tirei notas muito boas no colegio, acho que eu merecia ganhar uma boneca polly ', 'Querido papai noel moro na Rua da Alvorada, 879 ajudei muito papai e mamãe sempre que eles pediram esse ano, queria pedir para o senhor me trazer uma bicicleta ou bola no natal seria muito legal ', 'Papai noel, moro na rua ipiranga, 1750 esse ano tirei notas muito boas no colegio, acho que eu merecia ganhar uma bicicleta ', 'Oi papai noel meu endereço é avenida vinte e nove de setembro, n895 esse natal eu gostaria de ganhar um ponei se eu ganhar vou ficar muito muito feliz ', 'Querido Papai Noel esse ano tirei notas muito boas no colegio, acho que eu merecia ganhar um boneco max steel moro na rua da alvorada, 242 ', 'Oi papai noel eu moro na Rua da Alvorada, número 1066 ajudei muito papai e mamãe sempre que eles pediram esse ano, queria pedir para o senhor me trazer um tenis no natal seria muito legal ', 'Oi Papai Noel, eu sou a Nadia, eu gostaria de ganhar um ponei meu endereço é Estrada da Felicidade, n3622 ', 'Papai noel eu sou o Fransisco eu moro na estrada da felicidade, número 2205 eu gostaria de ganhar um ponei ', 'Papai noel eu sou a Eva eu moro na Rua Lopes Machado, número 162 fui muito legal com meus amiguinhos esse ano, sera que vc poderia me dar um boneco max steel ', 'Papai noel eu sou o Bruno como me comportei muito bem esse ano queria ganhar um boneco max steel moro na Rua Lopes Machado, 523 ', 'Papai noel eu sou a Luiza eu iria ficar muito feliz se ganhasse um carrinho eu moro na Rua Lopes Machado, número 3249 ', 'ola papai noel ajudei muito papai e mamãe sempre que eles pediram esse ano, queria pedir para o senhor me trazer uma Ferrari no natal seria muito legal moro na avenida brasil, 2583 ', 'Oi Papai Noel, eu sou o Felipe, meu endereço é Rua Ipiranga, n707 eu gostaria de ganhar uma bicicleta ou bola ', 'Oi Papai Noel, eu sou a Cristiane, como me comportei muito bem esse ano queria ganhar uma boneca polly meu endereço é Rua Diogenes Lima, n3393 ', 'Papai noel eu sou o Otavio eu moro na Avenida Brasil, número 1288 esse natal eu gostaria de ganhar um celular se eu ganhar vou ficar muito muito feliz ', 'ola papai noel fui muito legal com meus amiguinhos esse ano, sera que vc poderia me dar um computador meu endereço é Avenida Brasil, n2704 ', 'Querido papai noel, eu moro na Avenida Brasil, número 1731 eu iria ficar muito feliz se ganhasse uma boneca barbie ', 'Papai noel, eu moro na rua jose dias, número 2855 eu iria ficar muito feliz se ganhasse um ponei ', 'Oi Papai Noel, eu sou a Maria Eduarda, eu quero te pedir por favor uma boneca barbie eu moro na Avenida Vinte e Nove de Setembro, número 215 ', 'Oi Papai Noel, eu sou o Marcos, esse natal eu gostaria de ganhar um patinete se eu ganhar vou ficar muito muito feliz eu moro na rua da alvorada, número 1000 ', 'Papai noel eu sou o Johnson esse ano tirei notas muito boas no colegio, acho que eu merecia ganhar um tenis moro na Rua Lopes Machado, 673 ', 'Querido papai noel, eu moro na Rua Branco Matos, número 540 eu quero te pedir por favor um boneco max steel ', 'Oi Papai Noel, eu sou a Erica, fui muito legal com meus amiguinhos esse ano, sera que vc poderia me dar um patinete eu moro na Rua Lopes Machado, número 1513 ', 'Querido papai noel, meu endereço é Rua Lopes Machado, n1646 fui muito legal com meus amiguinhos esse ano, sera que vc poderia me dar um patinete ', 'Oi papai noel moro na rua da alvorada, 2727 gostaria de pedir para o senhor uma bola ', 'Oi papai noel meu endereço é Avenida Brasil, n864 gostaria de pedir para o senhor uma boneca barbie ', 'Papai noel eu sou a Cassia ajudei muito papai e mamãe sempre que eles pediram esse ano, queria pedir para o senhor me trazer uma boneca polly no natal seria muito legal eu moro na Rua Diogenes Lima, número 3801 ', 'Querido papai noel, ajudei muito papai e mamãe sempre que eles pediram esse ano, queria pedir para o senhor me trazer uma bicicleta no natal seria muito legal meu endereço é rua jose dias, n1559 ', 'Oi papai noel moro na rua diogenes lima, 3888 como me comportei muito bem esse ano queria ganhar um hotweels ', 'Querido papai noel moro na Rua Lopes Machado, 366 ajudei muito papai e mamãe sempre que eles pediram esse ano, queria pedir para o senhor me trazer um patinete no natal seria muito legal ', 'Oi papai noel fui muito legal com meus amiguinhos esse ano, sera que vc poderia me dar uma bola eu moro na Rua da Alvorada, número 830 ', 'Oi papai noel eu moro na Rua Branco Matos, número 73 fui muito legal com meus amiguinhos esse ano, sera que vc poderia me dar uma boneca polly ', 'Oi Papai Noel, eu sou a Erica, moro na Rua Branco Matos, 2568 gostaria de pedir para o senhor um celular ', 'Querido papai noel, meu endereço é Estrada da Felicidade, n3496 como me comportei muito bem esse ano queria ganhar um patinete ', 'Papai noel, esse natal eu gostaria de ganhar um hotweels se eu ganhar vou ficar muito muito feliz meu endereço é Rua Ipiranga, n1431 ', 'Oi Papai Noel, eu sou a Thais, gostaria de pedir para o senhor um carrinho meu endereço é Avenida Vinte e Nove de Setembro, n489 ', 'Oi Papai Noel, eu sou a Cassia, eu iria ficar muito feliz se ganhasse uma bicicleta ou bola meu endereço é Avenida Brasil, n607 ', 'Querido papai noel, eu gostaria de ganhar um hotweels eu moro na Rua da Alvorada, número 3419 ', 'Papai noel, eu moro na Estrada da Felicidade, número 2595 eu iria ficar muito feliz se ganhasse um carrinho ', 'Oi Papai Noel, eu sou a Nadia, meu endereço é Rua Jose Dias, n3705 eu gostaria de ganhar um computador ', 'Querido papai noel, ajudei muito papai e mamãe sempre que eles pediram esse ano, queria pedir para o senhor me trazer uma bola no natal seria muito legal moro na Rua Jose Dias, 2675 ', 'Oi papai noel moro na Rua Diogenes Lima, 3181 ajudei muito papai e mamãe sempre que eles pediram esse ano, queria pedir para o senhor me trazer uma bicicleta ou bola no natal seria muito legal ', 'Oi Papai Noel, eu sou o dani, eu moro na Rua Branco Matos, número 1061 gostaria de pedir para o senhor uma bola ', 'Papai noel, moro na Rua Diogenes Lima, 3165 eu quero te pedir por favor uma boneca barbie ', 'Oi papai noel moro na Rua Diogenes Lima, 2579 esse natal eu gostaria de ganhar um patinete se eu ganhar vou ficar muito muito feliz ', 'moro na Rua Lopes Machado, 1738 eu gostaria de ganhar um celular ', 'Papai noel, meu endereço é Rua Lopes Machado, n2402 esse natal eu gostaria de ganhar uma bicicleta se eu ganhar vou ficar muito muito feliz ', 'Querido papai noel gostaria de pedir para o senhor um boneco max steel meu endereço é Rua Jose Dias, n1734 ', 'Papai noel, eu moro na Rua Lopes Machado, número 540 ajudei muito papai e mamãe sempre que eles pediram esse ano, queria pedir para o senhor me trazer um boneco max steel no natal seria muito legal ', 'Querido papai noel, moro na Avenida Brasil, 1243 fui muito legal com meus amiguinhos esse ano, sera que vc poderia me dar uma bicicleta ou bola ', 'Oi Papai Noel, eu sou a vivi, meu endereço é Avenida Brasil, n32 ajudei muito papai e mamãe sempre que eles pediram esse ano, queria pedir para o senhor me trazer uma boneca barbie no natal seria muito legal ']\n\nexport default cartas;","import React, { useState } from 'react';\nimport { Button, TextArea, ToastNotification } from 'carbon-components-react';\nimport cartas from '../../constants/cartas';\n\nconst Carta = (props) => {\n\n    const initialState = {\n        letterText: \"\",\n        error: false,\n        errMsg: \"\"\n    };\n\n    const [state, setState] = useState(initialState);\n\n    const textChangeHandler = (e) => {\n        setState({ letterText: e.target.value });\n    };\n\n    const randomButtonHandler = () => {\n        const carta = cartas[Math.floor(Math.random() * cartas.length)];\n        setState({ letterText: carta });\n    };\n\n    const analyzeButtonHandler = async () => {\n        props.setLoading();\n        const rawResponse = await fetch('/analise', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json', 'Accept': 'application/json' },\n            body: JSON.stringify({\n                carta: state.letterText\n            })\n        });\n        const content = await rawResponse.json();\n        if (content.err === true) {\n            console.error(content);\n            setState({\n                ...state,\n                error: true,\n                errMsg: content.msg\n            });\n            props.cancel();\n        } else {\n            props.setData(content.result);\n            setState({\n                ...state,\n                error: false,\n                errMsg: \"404 - Not Found\"\n            })\n        };\n    };\n\n    let error;\n    if (state.error === true) {\n        error = (\n            <div className=\"loading--hover\">\n                <ToastNotification\n                    kind=\"error\"\n                    title=\"Erro\"\n                    subtitle={state.errMsg.split('\\n').map(line => <>{line}<br /></>)}\n                    iconDescription=\"Fechar\"\n                    onCloseButtonClick={() => setState({ ...state, error: false, errMsg: \"\" })}\n                    caption={Date()}\n                />\n            </div>\n        );\n    } else {\n        error = null;\n    }\n\n    return (\n        <div className=\"bx--grid\">\n            {error}\n            <div className=\"bx--row\" style={{ justifyContent: \"flex-start\", marginBottom: \"8px\" }}>\n                <Button\n                    kind=\"secondary\"\n                    style={{ marginRight: \"8px\" }}\n                    onClick={randomButtonHandler}>\n                    Carta Aleatória\n                </Button>\n                <Button\n                    onClick={analyzeButtonHandler}>\n                    Analisar\n                </Button>\n            </div>\n            <div className=\"bx--row\">\n                <TextArea\n                    value={state.letterText}\n                    cols={100}\n                    labelText=\"Carta\"\n                    rows={8}\n                    onChange={(e) => textChangeHandler(e)}\n                    placeholder=\"Escreva uma carta para o Papai Noel...\"\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default Carta;","import React from 'react';\nimport classes from './Analise.module.css';\n\nconst Analise = (props) => {\n\n    let content = null;\n    if (props.data === null) {\n        content = (\n            <div className=\"bx--row\">\n                <p className={classes.placeholder}>Clique no botão \"Analisar\" para ver como seu modelo está se saindo!</p>\n            </div>\n        )\n    } else {\n        console.log(props.data);\n        content = (\n            <>\n                <div className=\"bx--row\">\n                    <p className={classes.data}>\n                        {props.data.entities.map((entity, index) => {\n                            let prefix = <><span className={classes.subtitle}>Entidades</span><br /></>;\n                            if (index !== 0) {\n                                prefix = <br />;\n                            }\n                            return (<>\n                                {prefix}\n                                <strong>Tipo</strong>: \"{entity.type}\", <strong>Nome</strong>: \"{entity.text}\", <strong>Confiança</strong>: {entity.confidence}\n                            </>)\n                        })}\n                    </p>\n                </div>\n                <hr style={{ margin: \"16px 0\" }} />\n                <div className=\"bx--row\" style={{ marginTop: \"8px\" }}>\n                    <p className={classes.data}>\n                        {props.data.relations.map((relation, index) => {\n                            let prefix = <><span className={classes.subtitle}>Relações</span><br /></>;\n                            if (index !== 0) {\n                                prefix = <br />;\n                            };\n                            return (<>\n                                {prefix}\n                                <strong>Tipo</strong>: \"{relation.type}\"<br /><strong>Entidades envolvidas</strong>: {relation.arguments.map((argument, index) => {\n                                    if (index !== relation.arguments.length - 1) {\n                                        return '\"' + argument.text + '\", ';\n                                    } else {\n                                        return '\"' + argument.text + '\"';\n                                    };\n                                })}\n                                <br />\n                                <strong>Confiança</strong>: {relation.score}\n                                <br />\n                            </>);\n                        })}\n                    </p>\n                </div>\n            </>\n        );\n    }\n\n    return (\n        <div className=\"bx--grid\" style={{ marginTop: \"16px\" }}>\n            <label className=\"bx--label\">\n                Análise\n            </label>\n            {content}\n        </div>\n    );\n};\n\nexport default Analise;","import React, { useState } from 'react';\nimport './App.css';\nimport { Content } from 'carbon-components-react/lib/components/UIShell';\nimport { ToastNotification } from 'carbon-components-react';\nimport Header from './components/AppHeader/AppHeader';\nimport Carta from './components/Carta/Carta';\nimport Analise from './components/Analise/Analise';\nimport io from 'socket.io-client';\n\nconst App = (props) => {\n\n  const initialState = {\n    data: null,\n    loading: false,\n    points: null\n  };\n\n  const [state, setState] = useState(initialState);\n\n  const socket = io();\n  socket.on('pontuacaoRecebida', obj => {\n    console.log('pontuação recebida:', obj);\n    setState({\n      ...state,\n      // data: { ...state.data },\n      points: obj.msg,\n      loading: false\n    });\n  });\n\n  const setDataHandler = (data) => {\n    setState({\n      ...state,\n      data: {\n        entities: data.entities,\n        relations: data.relations\n      },\n      loading: false\n    });\n  };\n\n  const setLoadingHandler = () => {\n    setState({\n      ...state,\n      data: null,\n      loading: true\n    });\n  };\n\n  const cancelLoadingHandler = () => {\n    setState({\n      ...state,\n      loading: false\n    });\n  };\n\n  let loadingComponent = null;\n  if (state.loading === true) {\n    loadingComponent = (\n      <div className=\"loading--hover\">\n        <div data-loading className=\"bx--loading\">\n          <svg className=\"bx--loading__svg\" viewBox=\"-75 -75 150 150\">\n            <title>Loading</title>\n            <circle className=\"bx--loading__stroke\" cx=\"0\" cy=\"0\" r=\"37.5\" />\n          </svg>\n        </div>\n      </div>\n    );\n  } else {\n    loadingComponent = null;\n  };\n\n  let points;\n  if (state.points !== null) {\n    points = (\n      <div className=\"modal-settings\">\n        <ToastNotification\n          kind=\"success\"\n          title=\"Desafio concluído!\"\n          subtitle={state.points}\n          iconDescription=\"Fechar\"\n          onCloseButtonClick={() => setState({ ...state, points: null, loading: false })}\n          caption={Date()}\n        />\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <Header setLoading={setLoadingHandler} cancel={cancelLoadingHandler} />\n      <Content style={{ marginRight: \"16rem\" }}>\n        {points}\n        <div className=\"bx--grid\">\n          {loadingComponent}\n          <div className=\"bx--row\" style={{ marginBottom: \"32px\" }}>\n            <Carta setData={(d) => setDataHandler(d)} setLoading={setLoadingHandler} cancel={cancelLoadingHandler} />\n          </div>\n          <div className=\"bx--row\">\n            <Analise data={state.data} />\n          </div>\n        </div>\n      </Content>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RightPanel_container__3cbVn\"};"],"sourceRoot":""}